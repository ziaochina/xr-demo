{"version":3,"sources":["webpack:///./apps/xr-template-login/component.js","webpack:///./apps/xr-template-login/action.js","webpack:///./apps/xr-template-login/reducer.js"],"names":["C","props","monkeyKing","path","creator","action","option","onInit","component","injections","reduce","login","cfg","getCurrent","user","metaAction","gf","password","loginApi","ret","result","value","onRedirect","rediectInfo","toast","o","config","metaHandlers","reducer","init","state","data","form","metaReducer"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AAEA;;AAEA;;;;;;IAGqBA,C,WADpB,2C;;;;;;;;;;2BAES;AACR,UAAQ,KAAKC,KAAL,CAAWC,UAAX,4BAA0B,KAAKD,KAA/B,IAAsCE,MAAK,MAA3C,IAAR;AACA;;;;kBAHmBH,C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kBCwBGI,O;;AA/BxB;;;;AACA;;AACA;;;;;;IAEMC,M,GACF,gBAAYC,MAAZ,EAAoB;AAAA;;AAAA;;AAAA,SAIpBC,MAJoB,GAIX,gBAA+B;AAAA,YAA5BC,SAA4B,QAA5BA,SAA4B;AAAA,YAAjBC,UAAiB,QAAjBA,UAAiB;;AACpC,cAAKD,SAAL,GAAiBA,SAAjB;AACA,cAAKC,UAAL,GAAkBA,UAAlB;AACAA,mBAAWC,MAAX,CAAkB,MAAlB;AACH,KARmB;;AAAA,SAUpBC,KAVoB,8DAUZ;AAAA;AAAA;AAAA;AAAA;AAAA;AACEC,2BADF,GACQ,iBAAOC,UAAP,EADR;AAEEC,4BAFF,GAES,MAAKC,UAAL,CAAgBC,EAAhB,CAAmB,gBAAnB,CAFT;AAGEC,gCAHF,GAGa,MAAKF,UAAL,CAAgBC,EAAhB,CAAmB,oBAAnB,CAHb;AAAA;AAAA,+BAKc,iBAAOH,UAAP,GAAoBK,QAApB,CAA6BJ,IAA7B,EAAmCG,QAAnC,CALd;;AAAA;AAKEE,2BALF;;AAMJ,4BAAGA,IAAIC,MAAJ,IAAcD,IAAIE,KAArB,EAA2B;AACvB,gCAAI,MAAKb,SAAL,CAAeP,KAAf,CAAqBqB,UAArB,IAAmCV,IAAIW,WAA3C,EACI,MAAKf,SAAL,CAAeP,KAAf,CAAqBqB,UAArB,CAAgCV,IAAIW,WAApC;AACP,yBAHD,MAII;AACA,kCAAKR,UAAL,CAAgBS,KAAhB,CAAsB,OAAtB,EAA8B,OAA9B;AACH;;AAZG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAVY;;AAChB,SAAKT,UAAL,GAAkBT,OAAOS,UAAzB;AACH,C;;AAwBU,SAASX,OAAT,CAAiBE,MAAjB,EAAyB;AACpC,QAAMS,aAAa,yBAAeT,MAAf,CAAnB;AAAA,QACImB,IAAI,IAAIpB,MAAJ,4BAAgBC,MAAhB,IAAwBS,sBAAxB,IADR;AAAA,QAEII,iCAAWJ,UAAX,EAA0BU,CAA1B,CAFJ;;AAIAV,eAAWW,MAAX,CAAkB,EAAEC,cAAcR,GAAhB,EAAlB;;AAEA,WAAOA,GAAP;AACH;;;;;;;;;;;;;;;;;;;;;;;kBCpBuBf,O;;AAnBxB;;AACA;;AACA;;;;;;IAEMwB,O,GACF,iBAAYtB,MAAZ,EAAoB;AAAA;;AAAA;;AAAA,SAIpBuB,IAJoB,GAIb,UAACC,KAAD,EAAQxB,MAAR,EAAmB;AACtB,YAAMyB,OAAO;AACTA,kBAAM;AACFC,sBAAM,EAAElB,MAAM,EAAR,EAAYG,UAAU,EAAtB;AADJ;AADG,SAAb;AAKA,eAAO,MAAKgB,WAAL,CAAiBJ,IAAjB,CAAsBC,KAAtB,EAA6BC,IAA7B,CAAP;AACH,KAXmB;;AAChB,SAAKE,WAAL,GAAmB3B,OAAO2B,WAA1B;AACH,C;;AAYU,SAAS7B,OAAT,CAAiBE,MAAjB,EAAyB;AACpC,QAAM2B,cAAc,0BAAgB3B,MAAhB,CAApB;AAAA,QACImB,IAAI,IAAIG,OAAJ,4BAAiBtB,MAAjB,IAAyB2B,wBAAzB,IADR;;AAGA,sCAAYA,WAAZ,EAA4BR,CAA5B;AACH","file":"xr-template-login.e41bc9f0.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nimport { wrapper } from 'xr-meta-engine'\n\nimport appInfo from './index'\n\n@wrapper(appInfo)\nexport default class C extends Component {\n\trender() {\n\t\treturn  this.props.monkeyKing({...this.props, path:'root'})\n\t}\n}\n\n\n// WEBPACK FOOTER //\n// ./apps/xr-template-login/component.js","import React from 'react'\nimport { action as MetaAction, AppLoader } from 'xr-meta-engine'\nimport config from './config'\n\nclass action {\n    constructor(option) {\n        this.metaAction = option.metaAction\n    }\n\n    onInit = ({ component, injections }) => {\n        this.component = component\n        this.injections = injections\n        injections.reduce('init')\n    }\n\n    login = async () =>{\n        const cfg = config.getCurrent()\n        const user = this.metaAction.gf('data.form.user')\n        const password = this.metaAction.gf('data.form.password')\n\n        const ret = await config.getCurrent().loginApi(user, password)\n        if(ret.result && ret.value){\n            if( this.component.props.onRedirect && cfg.rediectInfo)\n                this.component.props.onRedirect(cfg.rediectInfo)\n        }\n        else{\n            this.metaAction.toast('error','error')\n        }\n    }\n}\n\nexport default function creator(option) {\n    const metaAction = new MetaAction(option),\n        o = new action({ ...option, metaAction }),\n        ret = { ...metaAction, ...o }\n\n    metaAction.config({ metaHandlers: ret })\n\n    return ret\n}\n\n\n// WEBPACK FOOTER //\n// ./apps/xr-template-login/action.js","import { Map } from 'immutable'\nimport { reducer as MetaReducer } from 'xr-meta-engine'\nimport config from './config'\n\nclass reducer {\n    constructor(option) {\n        this.metaReducer = option.metaReducer\n    }\n\n    init = (state, option) => {\n        const data = {\n            data: {\n                form: { user: '', password: '' }\n            }\n        }\n        return this.metaReducer.init(state, data)\n    }\n}\n\nexport default function creator(option) {\n    const metaReducer = new MetaReducer(option),\n        o = new reducer({ ...option, metaReducer })\n\n    return { ...metaReducer, ...o }\n}\n\n\n// WEBPACK FOOTER //\n// ./apps/xr-template-login/reducer.js"],"sourceRoot":""}